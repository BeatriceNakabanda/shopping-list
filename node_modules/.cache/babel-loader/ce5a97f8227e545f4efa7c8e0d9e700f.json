{"remainingRequest":"/media/beatrice/AA5A6A6A5A6A336D/ubuntu/Educ/try_vue/shopping-list/node_modules/babel-loader/lib/index.js!/media/beatrice/AA5A6A6A5A6A336D/ubuntu/Educ/try_vue/shopping-list/node_modules/cache-loader/dist/cjs.js??ref--0-0!/media/beatrice/AA5A6A6A5A6A336D/ubuntu/Educ/try_vue/shopping-list/node_modules/vue-loader/lib/index.js??vue-loader-options!/media/beatrice/AA5A6A6A5A6A336D/ubuntu/Educ/try_vue/shopping-list/src/views/Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"/media/beatrice/AA5A6A6A5A6A336D/ubuntu/Educ/try_vue/shopping-list/src/views/Home.vue","mtime":1569828513702},{"path":"/media/beatrice/AA5A6A6A5A6A336D/ubuntu/Educ/try_vue/shopping-list/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/beatrice/AA5A6A6A5A6A336D/ubuntu/Educ/try_vue/shopping-list/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/media/beatrice/AA5A6A6A5A6A336D/ubuntu/Educ/try_vue/shopping-list/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/beatrice/AA5A6A6A5A6A336D/ubuntu/Educ/try_vue/shopping-list/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _toConsumableArray from \"/media/beatrice/AA5A6A6A5A6A336D/ubuntu/Educ/try_vue/shopping-list/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/media/beatrice/AA5A6A6A5A6A336D/ubuntu/Educ/try_vue/shopping-list/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport ItemTable from '@/components/ItemTable.vue';\nimport AddItemForm from '@/components/AddItemForm.vue';\nexport default {\n  name: 'app',\n  components: {\n    ItemTable: ItemTable,\n    AddItemForm: AddItemForm\n  },\n  data: function data() {\n    return {\n      items: [{\n        id: 1,\n        name: 'Basket',\n        quantity: '5',\n        amount: '500'\n      }]\n    };\n  },\n  methods: {\n    /* \n    method to add items to the items array */\n    addItem: function addItem(item) {\n      var lastId = this.items.length > 0 ? this.items[this.items.length - 1].id : 0;\n      var id = lastId + 1;\n\n      var newItem = _objectSpread({}, item, {\n        id: id\n      });\n\n      this.items = [].concat(_toConsumableArray(this.items), [newItem]); // total = newItem + this.amount;\n    },\n\n    /* \n    creating method to delete an item from the items array */\n    deleteItem: function deleteItem(id) {\n      this.items = this.items.filter(function (employee) {\n        return employee.id !== id;\n      });\n    },\n\n    /* \n    creating method to edit an item from the items array */\n    editItem: function editItem(id, updateItem) {\n      this.items = this.items.map(function (item) {\n        return item.id === id ? updateItem : item;\n      });\n    }\n  }\n};",{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,OAAA,SAAA,MAAA,4BAAA;AACA,OAAA,WAAA,MAAA,8BAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,KADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,SAAA,EAAA,SADA;AAEA,IAAA,WAAA,EAAA;AAFA,GAFA;AAMA,EAAA,IANA,kBAMA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,CACA;AACA,QAAA,EAAA,EAAA,CADA;AAEA,QAAA,IAAA,EAAA,QAFA;AAGA,QAAA,QAAA,EAAA,GAHA;AAIA,QAAA,MAAA,EAAA;AAJA,OADA;AADA,KAAA;AAWA,GAlBA;AAmBA,EAAA,OAAA,EAAA;AACA;;AAEA,IAAA,OAHA,mBAGA,IAHA,EAGA;AACA,UAAA,MAAA,GACA,KAAA,KAAA,CAAA,MAAA,GAAA,CAAA,GACA,KAAA,KAAA,CAAA,KAAA,KAAA,CAAA,MAAA,GAAA,CAAA,EAAA,EADA,GAEA,CAHA;AAIA,UAAA,EAAA,GAAA,MAAA,GAAA,CAAA;;AACA,UAAA,OAAA,qBAAA,IAAA;AAAA,QAAA,EAAA,EAAA;AAAA,QAAA;;AACA,WAAA,KAAA,gCAAA,KAAA,KAAA,IAAA,OAAA,GAPA,CASA;AACA,KAbA;;AAcA;;AAEA,IAAA,UAhBA,sBAgBA,EAhBA,EAgBA;AACA,WAAA,KAAA,GAAA,KAAA,KAAA,CAAA,MAAA,CACA,UAAA,QAAA;AAAA,eAAA,QAAA,CAAA,EAAA,KAAA,EAAA;AAAA,OADA,CAAA;AAGA,KApBA;;AAqBA;;AAEA,IAAA,QAvBA,oBAuBA,EAvBA,EAuBA,UAvBA,EAuBA;AACA,WAAA,KAAA,GAAA,KAAA,KAAA,CAAA,GAAA,CAAA,UAAA,IAAA;AAAA,eACA,IAAA,CAAA,EAAA,KAAA,EAAA,GAAA,UAAA,GAAA,IADA;AAAA,OAAA,CAAA;AAEA;AA1BA;AAnBA,CAAA","sourcesContent":["<template>\n      <div class=\"home\">\n        <b-container >\n          <b-row>\n          <b-col>\n              <h3><b>Shopping List</b></h3>\n              <!-- item attribute helps you pass on data to itemTable because it starts with : \n              it does the same as v-bind -->\n              <item-table :items= \"items\" @delete:item= \"deleteItem\" @edit:item= \"editItem\"  />\n              \n              <!-- OR\n              <item-table v-bind:items=\"items\" /> -->    \n          </b-col>\n          \n          <b-col>\n            <h3><b>Add Items to Shopping List</b></h3>\n            <AddItemForm  @add:item= \"addItem\" /><br>\n          </b-col>\n          </b-row>\n        </b-container > \n      </div>\n</template>\n\n<script>\nimport ItemTable from '@/components/ItemTable.vue'\nimport AddItemForm from '@/components/AddItemForm.vue'\nexport default {\n  name: 'app',\n  components: {\n    ItemTable,\n    AddItemForm,\n  },\n  data(){\n    return{\n      items: [\n        {\n          id: 1,\n          name: 'Basket',\n          quantity: '5',\n          amount: '500',\n        },\n      ],\n     \n    }\n  },\n  methods:{\n    /* \n    method to add items to the items array */\n    addItem(item) {\n    const lastId = \n        this.items.length > 0 \n           ? this.items[this.items.length - 1].id\n            : 0;\n    const id = lastId + 1;\n    const newItem = { ...item, id };\n    this.items = [...this.items, newItem];\n   \n    // total = newItem + this.amount;\n    }, \n    /* \n    creating method to delete an item from the items array */\n    deleteItem(id){\n      this.items = this.items.filter(\n        employee => employee.id !== id\n      )\n    },\n    /* \n    creating method to edit an item from the items array */\n    editItem(id, updateItem){\n      this.items = this.items.map(item => \n      item.id === id? updateItem : item)\n    },\n \n\n   },\n\n\n}\n</script>\n<style>\n.container{\n  padding-bottom: 900px;\n}\n\n</style>\n"],"sourceRoot":"src/views"}]}