{"remainingRequest":"/media/beatrice/AA5A6A6A5A6A336D/ubuntu/Educ/try_vue/shopping-list/node_modules/vue-loader/lib/index.js??vue-loader-options!/media/beatrice/AA5A6A6A5A6A336D/ubuntu/Educ/try_vue/shopping-list/src/components/ItemTable.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/media/beatrice/AA5A6A6A5A6A336D/ubuntu/Educ/try_vue/shopping-list/src/components/ItemTable.vue","mtime":1569842818359},{"path":"/media/beatrice/AA5A6A6A5A6A336D/ubuntu/Educ/try_vue/shopping-list/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/media/beatrice/AA5A6A6A5A6A336D/ubuntu/Educ/try_vue/shopping-list/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/media/beatrice/AA5A6A6A5A6A336D/ubuntu/Educ/try_vue/shopping-list/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/media/beatrice/AA5A6A6A5A6A336D/ubuntu/Educ/try_vue/shopping-list/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/beatrice/AA5A6A6A5A6A336D/ubuntu/Educ/try_vue/shopping-list/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#item-table {\npadding-left: 0px;\n}\n#total{\n    margin-left: 880px;\n    \n}\n",{"version":3,"sources":["ItemTable.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6FA;AACA;AACA;AACA;AACA;;AAEA","file":"ItemTable.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div id=\"item-table\">\n        <p v-if=\"items.length < 1\" class=\"empty-table\"> \n            No Items\n        </p>\n        <!-- Creating a table that displays items added through the form,\n        the items in the table can be edited and deleted -->\n        <table class=\"table table-bordered table-striped\" v-else>\n            <thead class=\"thead-dark\">\n                <tr>\n                    <th>No</th>\n                    <th>Item</th>\n                    <th>Quantity</th>\n                    <th>Price@</th>\n                    <th>Actions</th>\n                    <th>Select Item</th>\n                    <th>Date Added</th>\n                </tr>\n            </thead>\n            <tbody v-for=\"item in items\" :key=\"item.id\">\n                <tr>\n                    <td>{{ item.id }}</td>\n                    <td v-if= \"editing === item.id\" >\n                        <input type=\"text\" v-model=\"item.name\">\n                    </td>\n                    <td v-else>{{ item.name }}</td>\n                    <td v-if= \"editing === item.id\">\n                        <input type=\"text\" v-model=\"item.quantity\">\n                    </td>\n                    <td v-else>{{ item.quantity }}</td>                   \n                    <td v-if= \"editing === item.id\">\n                        <input type=\"text\" v-model=\"item.amount\">\n                    </td>\n                    <td v-else >{{ item.amount }}</td>\n                    <td v-if=\"editing === item.id\">\n                        <button @click=\"editItem(item)\">Save</button>\n                        <button class=\"muted-button\" @click=\"editing = null\">Cancel</button>\n                    </td>\n                    <td v-else>\n                        <button @click=\"editMode(item.id)\">Edit</button> \n                        <button @click=\"$emit('delete:item', item.id)\">Delete</button>\n                    </td>\n                    <td>\n                        <input type=\"checkbox\" v-model=\"selected\" :value=\"item\">\n                    </td>\n                    <td>{{ myDate }}</td>\n                </tr>\n        \n            </tbody>\n        </table>\n        <strong id=\"total\">Total:  <span>{{ total }}</span></strong>\n    </div>\n</template>\n<script>\nexport default {\n    name: 'item-table',\n    //telling the component that it will recieve data inform of an array\n    props: {\n        items: Array,\n    },\n    data() {\n        return {\n            editing: null,\n            selected: [],\n            myDate: new Date().toISOString().slice(0,10)\n        }\n\n        \n    },\n    methods: {\n        /* creating an editing state that gets the id of the row currently being edited\n        when edit mode is enabled\n        */\n        editMode(id){\n            this.editing = id\n        },\n        editItem(item) {\n            if (item.name ===  '' || item ===  '') return\n            this.$emit('edit:item', item.id, item)\n            this.editing = null\n        },\n\n    },\n    computed: {\n        total(){\n            return this.selected.reduce(function (sum, item){\n                return sum + Number(item.amount)\n            }, 0)\n        }\n       },\n}\n</script>\n<style>\n#item-table {\npadding-left: 0px;\n}\n#total{\n    margin-left: 880px;\n    \n}\n</style>\n"]}]}