{"remainingRequest":"/media/beatrice/AA5A6A6A5A6A336D/ubuntu/Educ/try_vue/shopping-list/node_modules/vue-loader/lib/index.js??vue-loader-options!/media/beatrice/AA5A6A6A5A6A336D/ubuntu/Educ/try_vue/shopping-list/src/components/AddItemForm.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/media/beatrice/AA5A6A6A5A6A336D/ubuntu/Educ/try_vue/shopping-list/src/components/AddItemForm.vue","mtime":1568644620163},{"path":"/media/beatrice/AA5A6A6A5A6A336D/ubuntu/Educ/try_vue/shopping-list/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/media/beatrice/AA5A6A6A5A6A336D/ubuntu/Educ/try_vue/shopping-list/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/media/beatrice/AA5A6A6A5A6A336D/ubuntu/Educ/try_vue/shopping-list/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/media/beatrice/AA5A6A6A5A6A336D/ubuntu/Educ/try_vue/shopping-list/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/beatrice/AA5A6A6A5A6A336D/ubuntu/Educ/try_vue/shopping-list/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#myform{\n  padding-left: 15px;\n}\n[class*='-message']{\n   font-weight: 500; \n}\n.error-message{\n    color: #d33c40;\n}\n.success-message{\n    color: #32a95d;\n}\n",{"version":3,"sources":["AddItemForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AddItemForm.vue","sourceRoot":"src/components","sourcesContent":["<template>\n<!-- creating a form for adding item and their quantities into our shopping list -->\n    <div id=\"item-form\">\n        <!-- the prevent helps in preventing the default GET/POST -->\n        <b-form @submit.prevent=\"handleSubmit\" id=\"myform\" >\n            <b-form-row>\n                <label for=\"item-name\"><b>Item</b></label>\n                <b-form-input \n                ref=\"first\"\n                v-model= \"item.name\" \n                type= \"text\" \n                class= \"{ 'has-error': submitting && invalidName} form-control\" \n                placeholder= \"Bottle\" \n                @focus= \"clearStatus\"\n                @keypress= \"clearStatus\"\n                />\n            </b-form-row>\n            <b-form-row>\n                <label for=\"quantity\"><b>Quantity</b></label>\n                <b-form-input \n                v-model=\"item.quantity\"\n                type=\"text\" \n                class=\"{'has-error': submitting && invalidName} form-control\" \n                placeholder=\"2\" \n                @focus= \"clearStatus\"/>\n            </b-form-row>\n            <b-form-row>\n                <label for=\"amount\"><b>Amount</b></label>\n                <b-form-input \n                v-model=\"item.amount\"\n                type=\"text\" \n                class=\"{'has-error': submitting && invalidName} form-control\" \n                placeholder=\"UGX   2000\" \n                @focus= \"clearStatus\"/>\n                <p v-if= \"error && submitting\" class= \"error-message\">\n                    Please fill in all fields, Quantity and Amount must be a number\n                </p>\n                <p v-if= \"success\" class=\"success-message\">\n                    Item Successfully added\n                </p>\n            </b-form-row><br>\n                <button class=\"btn btn-primary\">Add Item</button>\n\n            \n        </b-form>\n    </div>\n</template>\n<script>\nexport default {\n    name: 'item-form',\n    //will recieve props inform of an array\n        data() {\n        return{\n            /* Adding submiting state to check whether the form is currently being submitted, \n            An error state if something went wrong, and a success state  if it went well */\n            submitting: false,\n            error: false,\n            success: false,\n            item: {\n                name: '',\n                quantity: '',\n                amount: '',\n            },\n\n        }\n    },\n    methods: {\n            /* \n            creating submit function which will first clear whether success/error are set,\n            check our computed properties and if true an error will be set \n            or if not we can submit and set all the states back to default.\n            */\n        handleSubmit(){\n            // console.log('testing handle submit')\n            this.submitting = true\n            this.clearStatus()\n\n            if (this.invalidItem || this.invalidQuantity || this.invalidAmount){\n                this.error = true\n                return\n            }\n            /* \n            passing items from the form to the table or to parent */\n            this.$emit(\n                //name of event to emit\n                'add:item',\n                //data to pass\n                this.item\n            )\n            this.$refs.first.focus()\n            this.item = {\n                name: '',\n                quantity: '',\n                amount: '',\n            }\n            this.error = false\n            this.success = true\n            this.submitting = false\n        },\n        clearStatus() {\n            this.success = false\n            this.error = false\n        }\n    },\n    //checking whether fields are empty\n    computed: {\n        invalidItem() {\n            return this.item.name === ''\n        },\n        invalidQuantity() {\n            if (this.item.quantity === '' || isNaN(this.item.quantity) )\n            return true\n        },\n        invalidAmount(){\n            return isNaN(this.item.amount)\n        }\n    },\n}\n</script>\n<style>\n#myform{\n  padding-left: 15px;\n}\n[class*='-message']{\n   font-weight: 500; \n}\n.error-message{\n    color: #d33c40;\n}\n.success-message{\n    color: #32a95d;\n}\n</style>\n\n"]}]}